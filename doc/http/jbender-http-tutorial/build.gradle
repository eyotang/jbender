// Capsule plugin
plugins {
    id "us.kirchmeier.capsule" version "1.0-rc1"
}

apply plugin: 'java'

// Target JDK8
sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'jbendertut'
version = '0.1-SNAPSHOT'

// UTF8 encoding for sources
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"

repositories {
    // Enable this if you want to use locally-built artifacts
    mavenLocal()

    // This allows using published Quasar snapshots
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }

    mavenCentral()
}

configurations {
    quasar
}

dependencies {
    // Quasar API
    compile group: "co.paralleluniverse", name: "quasar-core", version: "0.6.3-SNAPSHOT", classifier: "jdk8"

    // Comsat HTTP Client
    compile group: "co.paralleluniverse", name: "comsat-httpclient", version: "0.3.0"

    // HDR histogram
    compile group: 'org.hdrhistogram', name: 'HdrHistogram', version: "2.1.4"

    // JBender API
    compile group: "com.pinterest", name: "jbender", version: "1.0.1-SNAPSHOT"

    // Logging
    compile group: "org.slf4j", name: "slf4j-api", version: "1.7.12"
    compile group: "org.slf4j", name: "slf4j-simple", version: "1.7.12"

    // Useful to point to the Quasar agent later in JVM flags (and Capsule-building task)
    quasar group: "co.paralleluniverse", name: "quasar-core", version: "0.6.3-SNAPSHOT", classifier: "jdk8"
}

// Task building an handy self-contained load test capsule
task capsule(type: FatCapsule) {
    applicationClass "LoadTest"

    capsuleManifest {
        // Aggressive optimizations and Quasar agent
        javaAgents = [configurations.quasar.iterator().next().getName()] // Add "=vdc" to the Quasar agent to trace instrumentation
        jvmArgs = ["-server", "-XX:+TieredCompilation", "-XX:+AggressiveOpts"]
    }
}

// Gradle JavaExec load test task
task runLoadTest(type: JavaExec) {
    main = "LoadTest"

    classpath = sourceSets.main.runtimeClasspath

    // Aggressive optimizations and Quasar agent
    jvmArgs = ["-server", "-XX:+TieredCompilation", "-XX:+AggressiveOpts", "-javaagent:${configurations.quasar.iterator().next()}"] // Add "=vdc" to the Quasar agent to trace instrumentation

    // Enable this to troubleshoot instrumentation issues
    // systemProperties = ["co.paralleluniverse.fibers.verifyInstrumentation" : "true"]
}
